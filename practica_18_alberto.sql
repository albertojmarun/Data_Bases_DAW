-- Alberto Jose Marun Indriago.
-- 28 de Abril de 2021.
-- Practica - Tema 18 Base de Datos.

-- 1. Crear un Objeto Denominado Alumno.
/*
    Objeto de Tipo Alumno, Atributos:
        - NOMBRE
        - APELLIDO
        - DNI
        - NOTA
*/
CREATE OR REPLACE TYPE ALUMNO AS OBJECT (
    NOMBRE      VARCHAR2(50),
    APELLIDO    VARCHAR2(50),
    DNI         VARCHAR2(9),
    nota        NUMBER
);

-- 2. Crear un Objeto Denominado Profesor
/*
    Objeto de Tipo PROFESOR, Atributos:
        - NOMBRE
        - APELLIDO
        - DNI
        - ASIGNATURA
*/
CREATE OR REPLACE TYPE PROFESOR AS OBJECT (
    NOMBRE      VARCHAR2(50),
    APELLIDO    VARCHAR2(50),
    DNI         VARCHAR2(9),
    ASIGNATURA  VARCHAR2(50)
);

-- 3. CREAR UN OBJETO DE TIPO EMPLEADO.
/*
    Debe poseer los mismos atributos que tiene la tabla employee.
        - EMPLOYEE_ID
        - FIRST_NAME
        - LAST_NAME
        - EMAIL
        - PHONE_NUMBER
        - HIRE_DATE
        - JOB_ID
        - SALARY
        - COMMISSION_PCT
        - MANAGER_ID
        - DEPARTMENT_ID
*/
CREATE OR REPLACE TYPE EMPLEADO AS OBJECT(
    EMPLEADO_ID INTEGER,
    NOMBRE VARCHAR2(20),
    APELLIDO VARCHAR2(20),
    EMAIL VARCHAR2(30),
    PHONE_NUMBER VARCHAR2(15),
    DIA_CONTRATACION DATE,
    TRABAJO_ID VARCHAR2(10),
    SALARIO NUMBER,
    PCT_COMISION NUMBER,
    GERENTE_ID NUMBER,
    DEPARTAMENTO_ID NUMBER,
    CONSTRUCTOR FUNCTION EMPLEADO(EMPLEADO_ID NUMBER, NOMBRE VARCHAR2, APELLIDO VARCHAR2, EMAIL VARCHAR2, DIA_CONT DATE, TRABAJO_ID VARCHAR2 )RETURN SELF AS RESULT
);

-- 4. CREAR UN OBJETO DE TIPO DEPARTAMENTO
/*
     Debe poseer los mismos atributos que tiene la tabla Departments.
        - DEPARTMENT_ID
        - DEPARTMENT_NAME
        - MANAGER_ID
        - LOCATION_ID
*/
CREATE OR REPLACE TYPE DEPARTAMENTO AS OBJECT(
    DEPARTAMENTO_ID NUMBER,
    NOMBRE_DEPARTAMENTO VARCHAR2(30),
    GERENTE_ID NUMBER,
    UBICACION_ID NUMBER
);

-- 5. Construye para empleado un método que devuelva cuanto tiempo lleva el empleado contratado

-- AÑADIR UNA FUNCION QUE SE DENOMINE TIEMPO_CONTRATADO Y DEVUELVA EL TIEMPO CONTRATADO.
/*
    NO SE DEVUELVE UN TIPO DATE DEBIDO A QUE RESULTA CONFLICTIVO.
*/
ALTER TYPE EMPLEADO ADD MEMBER FUNCTION tiempo_contratado RETURN VARCHAR2;

-- SE CREA EL TIPO BODY Y SE IMPLEMENTA LA FUNCION DE TIEMPO_CONTRATADO.
CREATE OR REPLACE TYPE BODY EMPLEADO AS 
   MEMBER FUNCTION tiempo_contratado return VARCHAR2 AS 
   BEGIN 
        return TO_CHAR(SYSDATE - SELF.DIA_CONTRATACION);
   END tiempo_contratado;   
END;

-- 6. Construye para empleado un método que sobrecargue el constructor por defecto, en este caso para inicializarlo con los obligatorios (los que lo son en la tabla).

-- SE IMPLEMENTA EL CONSTRUCTOR DEL TIPO EMPLEADO.
CREATE OR REPLACE TYPE BODY EMPLEADO AS
    CONSTRUCTOR FUNCTION
        EMPLEADO(EMPLEADO_ID NUMBER, NOMBRE VARCHAR2, APELLIDO VARCHAR2, EMAIL VARCHAR2, DIA_CONT DATE, TRABAJO_ID VARCHAR2 )
        RETURN SELF AS RESULT IS
        BEGIN
            SELF.EMPLEADO_ID := EMPLEADO_ID;
            SELF.NOMBRE := NOMBRE;
            SELF.APELLIDO := APELLIDO;
            SELF.EMAIL := EMAIL;
            SELF.DIA_CONTRATACION := DIA_CONT;
            SELF.TRABAJO_ID := TRABAJO_ID;
        RETURN;
    END;
    
    MEMBER FUNCTION tiempo_contratado return VARCHAR2 AS 
        BEGIN 
            return TO_CHAR(SYSDATE - SELF.DIA_CONTRATACION);
    END tiempo_contratado;
END;

-- 7.  Construye un método para empleado que aumente el salario de un empleado.

-- SE AÑADE EL PROCEDIMIENTO DE AUMENTAR EL SALARIO AL TIPO EMPLEADO.
ALTER TYPE EMPLEADO ADD MEMBER PROCEDURE AUMENTO_SALARIAL (AUMENTO NUMBER);

-- SE AÑADE A LA TIPOLOGÍA BODY LA IMPLEMENTACION DEL PROCEDIMIENTO AUMENTO_SALARIAL
CREATE OR REPLACE TYPE BODY EMPLEADO AS CONSTRUCTOR FUNCTION
    EMPLEADO(EMPLEADO_ID NUMBER, NOMBRE VARCHAR2, APELLIDO VARCHAR2, EMAIL VARCHAR2, DIA_CONT DATE, TRABAJO_ID VARCHAR2 )
    RETURN SELF AS RESULT IS
    BEGIN
        SELF.EMPLEADO_ID := EMPLEADO_ID;
        SELF.NOMBRE := NOMBRE;
        SELF.APELLIDO := APELLIDO;
        SELF.EMAIL := EMAIL;
        SELF.DIA_CONTRATACION := DIA_CONT;
        SELF.TRABAJO_ID := TRABAJO_ID;
        RETURN;
    END;
    
    MEMBER FUNCTION tiempo_contratado return VARCHAR2 AS 
    BEGIN 
        return TO_CHAR(SYSDATE - SELF.DIA_CONTRATACION);
    END tiempo_contratado;
    
    MEMBER PROCEDURE AUMENTO_SALARIAL(AUMENTO NUMBER) AS
    BEGIN
        SELF.SALARIO := SELF.SALARIO * AUMENTO;
    END AUMENTO_SALARIAL;
END;

-- 8. Construye un método que devuelva la fecha de contratación de un empleado.

-- AÑADIR AL TIPO EMPLEADO LA FUNCION DIME_FECHA_CONTRATACION.
ALTER TYPE EMPLEADO ADD MEMBER FUNCTION DIME_FECHA_CONTRATACION RETURN DATE;

-- SE AÑADE A LA TIPOLOGIA DEL CUERPO DEL TIPO EMPLEADO LA DECLARACION 
CREATE OR REPLACE TYPE BODY EMPLEADO AS CONSTRUCTOR FUNCTION
    EMPLEADO(EMPLEADO_ID NUMBER, NOMBRE VARCHAR2, APELLIDO VARCHAR2, EMAIL VARCHAR2, DIA_CONT DATE, TRABAJO_ID VARCHAR2 )
    RETURN SELF AS RESULT IS
    BEGIN
        SELF.EMPLEADO_ID := EMPLEADO_ID;
        SELF.NOMBRE := NOMBRE;
        SELF.APELLIDO := APELLIDO;
        SELF.EMAIL := EMAIL;
        SELF.DIA_CONTRATACION := DIA_CONT;
        SELF.TRABAJO_ID := TRABAJO_ID;
        RETURN;
    END;
    
    MEMBER FUNCTION tiempo_contratado return VARCHAR2 AS 
    BEGIN 
        return TO_CHAR(SYSDATE - SELF.DIA_CONTRATACION);
    END tiempo_contratado;
    
    MEMBER PROCEDURE AUMENTO_SALARIAL(AUMENTO NUMBER) AS
    BEGIN
        SELF.SALARIO := SELF.SALARIO * AUMENTO;
    END AUMENTO_SALARIAL;
    
    MEMBER FUNCTION DIME_FECHA_CONTRATACION return DATE AS 
    BEGIN 
        return SELF.DIA_CONTRATACION;
    END DIME_FECHA_CONTRATACION;
END;

-- 9. Construye un método para departamento que devuelva el nombre del departamento a partir del identificador de departamento facilitado.

-- SE AÑADE AL TIPO DEPARTAMENTO LA FUNCION DIME_NOMBRE_DEPARTAMENTO.
ALTER TYPE DEPARTAMENTO ADD MEMBER FUNCTION DIME_NOMBRE_DEPARTAMENTO(DEPARTAMENTO_ID NUMBER) RETURN VARCHAR2;

-- EN EL CUERPO DEL TIPO DEPARTAMENTO SE AÑADE LA DECLARACION DE LA FUNCIÓN DIME_NOMBRE_DEPARTAMENTO.
CREATE OR REPLACE TYPE BODY DEPARTAMENTO AS
    MEMBER FUNCTION DIME_NOMBRE_DEPARTAMENTO(DEPARTAMENTO_ID NUMBER) RETURN VARCHAR2 IS
        NOMBRE_DEP VARCHAR2(50);
    BEGIN
        SELECT DEPARTMENT_NAME INTO NOMBRE_DEP FROM DEPARTMENTS WHERE DEPARTMENT_ID = DEPARTAMENTO_ID;
    RETURN NOMBRE_DEP;
    END DIME_NOMBRE_DEPARTAMENTO;
END;

-- 10. Construye un método que modifique el nombre de un departamento pasado como id.

-- SE AÑADE LA FUNCIÓN DE CAMBIO_DE_NOMBRE_DEPARTAMENTO AL TIPO DEPARTAMENTO.
ALTER TYPE DEPARTAMENTO ADD MEMBER PROCEDURE CAMBIO_DE_NOMBRE_DEPARTAMENTO(NUEVO_NOMBRE VARCHAR2, DEPARTAMENTO_ID NUMBER);

-- SE AÑADE LA DECLARACIÓN DE CAMBIO_DE_NOMBRE_DEPARTAMENTO AL CUERPO DEL TIPO DEPARTAMENTO.
CREATE OR REPLACE TYPE BODY DEPARTAMENTO AS
    MEMBER FUNCTION DIME_NOMBRE_DEPARTAMENTO(DEPARTAMENTO_ID NUMBER) RETURN VARCHAR2 IS
        NOMBRE_DEP VARCHAR2(50);
    BEGIN
        SELECT DEPARTMENT_NAME INTO NOMBRE_DEP FROM DEPARTMENTS WHERE DEPARTMENT_ID = DEPARTAMENTO_ID;
    RETURN NOMBRE_DEP;
    END DIME_NOMBRE_DEPARTAMENTO;
    
    MEMBER PROCEDURE CAMBIO_DE_NOMBRE_DEPARTAMENTO(NUEVO_NOMBRE VARCHAR2, DEPARTAMENTO_ID NUMBER) AS 
        BEGIN
            UPDATE DEPARTMENTS SET DEPARTMENT_NAME = NUEVO_NOMBRE WHERE DEPARTMENT_ID = DEPARTAMENTO_ID;
    END CAMBIO_DE_NOMBRE_DEPARTAMENTO;
END;